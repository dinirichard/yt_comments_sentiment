import type { VssComments } from "./comments.dto";
import type { ProcessedTopicResult } from "./utils";

const htmlHeadTemplate = `
        <!DOCTYPE html>
        <html lang="en">
            <head>
                <meta charset="UTF-8" />
                <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                <title>Youtube Made Simple</title>
                <!-- Using Tailwind CSS CDN -->
                <script src="https://unpkg.com/@tailwindcss/browser@4"></script>
                <!-- Google Font for a handwriting style -->
                <link rel="preconnect" href="https://fonts.gstatic.com" />
                <link
                    href="https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap"
                    rel="stylesheet"
                />
                <script
                    defer
                    src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
                ></script>
                <!-- Alpine Plugins -->
                <script
                    defer
                    src="https://cdn.jsdelivr.net/npm/@alpinejs/mask@3.x.x/dist/cdn.min.js"
                ></script>
                <script
                    defer
                    src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"
                ></script>
                <script
                    defer
                    src="https://cdn.jsdelivr.net/npm/@alpinejs/focus@3.x.x/dist/cdn.min.js"
                ></script>
                <style>
                    body {
                        background-color: #f7fafc; /* bg-gray-100 */
                        font-family: 'Patrick Hand', sans-serif;
                    }
                    h1, h2 {
                        font-weight: 700; /* font-bold equivalent */
                        margin-bottom: 0.5rem; /* mb-2 */
                    }
                    ul {
                        list-style-type: disc;
                        margin-left: 1.5rem; /* ml-6 */
                        margin-bottom: 1.5rem; /* mb-6 */
                    }
                    li {
                        margin-bottom: 1rem; /* mb-4 */
                    }
                    ol {
                        list-style-type: decimal;
                        margin-left: 2rem; /* ml-8 */
                        margin-top: 0.5rem; /* mt-2 */
                    }
                    ol li {
                        margin-bottom: 0.2rem; /* Adjust as needed */
                    }
                    .bullet-content ol {
                        margin-top: 0.3rem; /* Adjust as needed */
                        margin-bottom: 0.3rem; /* Adjust as needed */
                        padding-left: 0.3rem;
                    }
                </style>
        </head>`;

export function htmlSummaryGenerator(
    VideoTitle: string,
    imageUrl: string,
    videoId: string,
    topicSections: ProcessedTopicResult[]
): string {
    // Start building the HTML using template literals
    let htmlTemplate =
        htmlHeadTemplate +
        `
        <body class="min-h-screen flex items-center justify-center p-4">
            <div class="max-w-2xl w-full bg-white rounded-2xl shadow-lg p-6">
                <!-- Attribution header -->
                <div class="mb-6 text-right text-gray-500 text-sm">
                  Generated by 
                  <a href="https://github.com/The-Pocket/Tutorial-Youtube-Made-Simple" 
                     class="underline hover:text-gray-700">
                    Youtube Made Simple
                  </a>
                </div>
                <!-- Title 1 -->
                <a href="https://youtube.com/${videoId}" 
                     class=" hover:underline">
                    <h1 class="text-4xl text-gray-800 mb-4">${VideoTitle}</h1>
                  </a>
                <!-- Image below Title 1 -->
                <img
                  src="${imageUrl}"
                  alt="Placeholder image"
                  class="rounded-xl mb-6"
                />`;

    // For each section, add a sub-title (Title 2, etc.) and bullet points.
    for (const section of topicSections) {
        const sectionTitle = section.rephrasedTitle || section.title; // Use default empty string if title is missing
        const bullets = section.questions; // Use default empty array if bullets are missing

        // Add the section's title (Title 2, Title 3, etc.)
        htmlTemplate += `
                <h2 class="text-2xl text-gray-800 mb-4">${sectionTitle}</h2>
                <ul class="text-gray-600">`;

        // Create list items for each bullet pair
        for (let i = 0; i < bullets.length; i++) {
            htmlTemplate += `
                    <li>
                        <strong aria-label="${bullets[i].original}">${bullets[i].rephrased}</strong><br />
                        <div class="bullet-content">${bullets[i].answer}</div>
                    </li>`;
        }
        htmlTemplate += `
                </ul>`;
    }

    // Close the main container and body
    htmlTemplate += `
                </div>
            </body>
        </html>`;

    return htmlTemplate;
}

export function htmlVssGenerator(
    VideoTitle: string,
    imageUrl: string,
    videoId: string,
    vssComments: VssComments[]
) {
    // Start building the HTML using template literals
    let htmlTemplate =
        htmlHeadTemplate +
        `
        <body class="min-h-screen flex items-center justify-center p-4">
            <div class="max-w-2xl w-full bg-white rounded-2xl shadow-lg p-6">
                <!-- Attribution header -->
                <div class="mb-6 text-right text-gray-500 text-sm">
                  Generated by 
                  <a href="https://github.com/The-Pocket/Tutorial-Youtube-Made-Simple" 
                     class="underline hover:text-gray-700">
                    Youtube Made Simple
                  </a>
                </div>
                <!-- Title 1 -->
                <a href="https://youtube.com/${videoId}" 
                     class=" hover:underline">
                    <h1 class="text-4xl text-gray-800 mb-4">${VideoTitle}</h1>
                  </a>
                <!-- Image below Title 1 -->
                <img
                  src="${imageUrl}"
                  alt="Placeholder image"
                  class="rounded-xl mb-6"
                />
                <div class="w-fullbg-white rounded-lg border p-1 md:p-3 mt-10">
                    <div class="divide-y divide-slate-200">

                        <div class="flex w-full flex-col gap-4 text-gray-800 dark:text-gray-300">
                `;

    for (const topics of vssComments) {
        // Add the section's title (Title 2, Title 3, etc.)
        htmlTemplate += `
                        <!-- Accordion Container -->
                            <div
                                x-data="{ isExpanded: false }"
                                class="overflow-hidden rounded-lg border border-gray-500 bg-gray-50 dark:border-gray-500 dark:bg-gray-100/50"
                            >
                                <button
                                    id="controlsAccordionItemOne"
                                    type="button"
                                    class="flex w-full items-center justify-between gap-2 bg-gray-200 p-4 text-left underline-offset-2 hover:bg-gray-200/75 focus-visible:bg-gray-200/75 focus-visible:underline focus-visible:outline-hidden dark:bg-gray-800 dark:hover:bg-gray-800/75 dark:focus-visible:bg-gray-800/75"
                                    aria-controls="accordionItemOne"
                                    aria-label="${topics.topicTranscriptId}"
                                    x-on:click="isExpanded = ! isExpanded"
                                    x-bind:class="isExpanded ? 'text-onSurfaceStrong dark:text-onSurfaceDarkStrong font-bold'  : 'text-onSurface dark:text-onSurfaceDark font-medium'"
                                    x-bind:aria-expanded="isExpanded ? 'true' : 'false'"
                                >
                                    ${topics.topicText}
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        stroke-width="2"
                                        stroke="currentColor"
                                        class="size-5 shrink-0 transition"
                                        aria-hidden="true"
                                        x-bind:class="!isExpanded  ?  'rotate-180'  :  ''"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                                        />
                                    </svg>
                                </button>
                                <div
                                    x-cloak
                                    x-show="isExpanded"
                                    id="accordionItemOne"
                                    role="region"
                                    aria-labelledby="controlsAccordionItemOne"
                                    x-collapse
                                >
                                    
        `;

        for (const comments of topics.similarComments) {
            const showReplies = comments.replies!.length > 0 ? true : false;
            htmlTemplate += `
                        <div>
                                
                                <div class="flex flex-col gap-5 m-3">
                                    <!-- Comment Container -->
                                    <div x-data="{ repliesOpen: true }" class="pb-2">
                                        <div
                                            class="flex w-full justify-between border dark:border-gray-800 rounded-md"
                                        >
                                            <div class="p-3">
                                                <div
                                                    class="flex gap-3 items-center"
                                                >
                                                    <img
                                                        src="https://avatars.githubusercontent.com/u/22263436?v=4"
                                                        class="object-cover w-10 h-10 rounded-full border-2 border-emerald-400 shadow-emerald-400"
                                                    />
                                                    <h3 class="font-bold">
                                                        User 1
                                                        <br />
                                                        <span
                                                            class="text-sm text-gray-400 font-normal"
                                                            >Level 1</span
                                                        >
                                                    </h3>
                                                </div>
                                                <p class="text-gray-600 mt-2">
                                                    ${comments.textDisplay}
                                                </p>
                                                <button
                                                    x-on:click="repliesOpen = ! repliesOpen"
                                                    class="flex text-right text-blue-500"
                                                    x-show = ${showReplies}
                                                >
                                                    Replies 
                                                    &nbsp;
                                                    <svg
                                                        xmlns="http://www.w3.org/2000/svg"
                                                        viewBox="0 0 24 24"
                                                        fill="none"
                                                        stroke-width="2"
                                                        stroke="currentColor"
                                                        class="size-4 shrink-0 transition mt-1"
                                                        aria-hidden="true"
                                                        x-bind:class="!repliesOpen  ?  'rotate-180'  :  ''"
                                                    >
                                                        <path
                                                            stroke-linecap="round"
                                                            stroke-linejoin="round"
                                                            d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                                                        />
                                                    </svg>
                                                </button>
                                            </div>
                                        </div>

                                        <div
                                            x-cloak x-show.transition.in.duration.800ms="repliesOpen" x-collapse
            >`;

            if (comments.replies) {
                for (const reply of comments.replies) {
                    htmlTemplate += `
                        <!-- Reply Container  -->
                                            <div
                                                class="text-red-500 font-bold pl-14"
                                            >
                                                |
                                            </div>
                                            <div
                                                class="flex justify-between border dark:border-gray-800 ml-5 rounded-md"
                                            >
                                                <div class="p-3">
                                                    <div
                                                        class="flex gap-3 items-center"
                                                    >
                                                        <img
                                                            src="https://avatars.githubusercontent.com/u/22263436?v=4"
                                                            class="object-cover w-10 h-10 rounded-full border-2 border-emerald-400 shadow-emerald-400"
                                                        />
                                                        <h3 class="font-bold">
                                                            User 2
                                                            <br />
                                                            <span
                                                                class="text-sm text-gray-400 font-normal"
                                                                >Level 1</span
                                                            >
                                                        </h3>
                                                    </div>
                                                    <p
                                                        class="text-gray-600 mt-2"
                                                        aria-label="${reply.id}"
                                                    >
                                                        ${reply.textDisplay}
                                                    </p>
                                                </div>
                                            </div>
                                            <!-- END Reply Container  -->
                        `;
                }
            }

            htmlTemplate += `           </div>
                                    </div>
                                    <!-- END Comment Container  -->
                                </div>
                            </div>`;
        }

        htmlTemplate += `</div>
                    </div>`;
    }

    htmlTemplate += `   </div>
                    </div>
                </div>
            </body>
        </html>`;

    return htmlTemplate;
}
